
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Mar 08 16:16:32 COT 2022
//----------------------------------------------------

package controllers;

import java_cup.runtime.Symbol;
import models.Equation;
import utilities.Utilities;
import errors.NegativeNumberException;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Mar 08 16:16:32 COT 2022
  */
public class Syntax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Syntax() {super();}

  /** Constructor which sets the default scanner. */
  public Syntax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Syntax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\033\000\002\002\004\000\002\003\014\000\002\003" +
    "\014\000\002\003\012\000\002\003\012\000\002\003\013" +
    "\000\002\003\013\000\002\003\013\000\002\003\013\000" +
    "\002\003\014\000\002\003\014\000\002\003\013\000\002" +
    "\003\013\000\002\004\014\000\002\004\014\000\002\004" +
    "\012\000\002\004\012\000\002\004\013\000\002\004\013" +
    "\000\002\004\013\000\002\004\013\000\002\004\014\000" +
    "\002\004\014\000\002\004\013\000\002\004\013\000\002" +
    "\005\003\000\002\002\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\215\000\004\014\004\001\002\000\004\006\116\001" +
    "\002\000\004\015\011\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\016\115\001\002\000" +
    "\004\006\012\001\002\000\010\005\013\011\014\012\015" +
    "\001\002\000\004\012\067\001\002\000\004\012\042\001" +
    "\002\000\006\004\017\005\016\001\002\000\006\011\031" +
    "\013\032\001\002\000\006\011\020\013\021\001\002\000" +
    "\004\013\025\001\002\000\004\007\022\001\002\000\004" +
    "\011\023\001\002\000\004\010\024\001\002\000\004\016" +
    "\ufff2\001\002\000\004\007\026\001\002\000\004\011\027" +
    "\001\002\000\004\010\030\001\002\000\004\016\ufff0\001" +
    "\002\000\004\013\036\001\002\000\004\007\033\001\002" +
    "\000\004\011\034\001\002\000\004\010\035\001\002\000" +
    "\004\016\ufff1\001\002\000\004\007\037\001\002\000\004" +
    "\011\040\001\002\000\004\010\041\001\002\000\004\016" +
    "\uffef\001\002\000\006\004\044\005\043\001\002\000\006" +
    "\011\056\013\057\001\002\000\006\011\045\013\046\001" +
    "\002\000\004\013\052\001\002\000\004\007\047\001\002" +
    "\000\004\011\050\001\002\000\004\010\051\001\002\000" +
    "\004\016\uffea\001\002\000\004\007\053\001\002\000\004" +
    "\011\054\001\002\000\004\010\055\001\002\000\004\016" +
    "\ufff4\001\002\000\004\013\063\001\002\000\004\007\060" +
    "\001\002\000\004\011\061\001\002\000\004\010\062\001" +
    "\002\000\004\016\uffe9\001\002\000\004\007\064\001\002" +
    "\000\004\011\065\001\002\000\004\010\066\001\002\000" +
    "\004\016\ufff3\001\002\000\006\004\071\005\070\001\002" +
    "\000\006\011\103\013\104\001\002\000\006\011\072\013" +
    "\073\001\002\000\004\013\077\001\002\000\004\007\074" +
    "\001\002\000\004\011\075\001\002\000\004\010\076\001" +
    "\002\000\004\016\uffee\001\002\000\004\007\100\001\002" +
    "\000\004\011\101\001\002\000\004\010\102\001\002\000" +
    "\004\016\uffec\001\002\000\004\013\110\001\002\000\004" +
    "\007\105\001\002\000\004\011\106\001\002\000\004\010" +
    "\107\001\002\000\004\016\uffed\001\002\000\004\007\111" +
    "\001\002\000\004\011\112\001\002\000\004\010\113\001" +
    "\002\000\004\016\uffeb\001\002\000\004\002\uffe7\001\002" +
    "\000\004\002\uffe8\001\002\000\010\005\117\011\120\012" +
    "\121\001\002\000\004\012\173\001\002\000\004\012\146" +
    "\001\002\000\006\004\123\005\122\001\002\000\006\011" +
    "\135\013\136\001\002\000\006\011\124\013\125\001\002" +
    "\000\004\013\131\001\002\000\004\007\126\001\002\000" +
    "\004\011\127\001\002\000\004\010\130\001\002\000\004" +
    "\015\ufffe\001\002\000\004\007\132\001\002\000\004\011" +
    "\133\001\002\000\004\010\134\001\002\000\004\015\ufffc" +
    "\001\002\000\004\013\142\001\002\000\004\007\137\001" +
    "\002\000\004\011\140\001\002\000\004\010\141\001\002" +
    "\000\004\015\ufffd\001\002\000\004\007\143\001\002\000" +
    "\004\011\144\001\002\000\004\010\145\001\002\000\004" +
    "\015\ufffb\001\002\000\006\004\150\005\147\001\002\000" +
    "\006\011\162\013\163\001\002\000\006\011\151\013\152" +
    "\001\002\000\004\013\156\001\002\000\004\007\153\001" +
    "\002\000\004\011\154\001\002\000\004\010\155\001\002" +
    "\000\004\015\ufff6\001\002\000\004\007\157\001\002\000" +
    "\004\011\160\001\002\000\004\010\161\001\002\000\004" +
    "\015\000\001\002\000\004\013\167\001\002\000\004\007" +
    "\164\001\002\000\004\011\165\001\002\000\004\010\166" +
    "\001\002\000\004\015\ufff5\001\002\000\004\007\170\001" +
    "\002\000\004\011\171\001\002\000\004\010\172\001\002" +
    "\000\004\015\uffff\001\002\000\006\004\175\005\174\001" +
    "\002\000\006\011\207\013\210\001\002\000\006\011\176" +
    "\013\177\001\002\000\004\013\203\001\002\000\004\007" +
    "\200\001\002\000\004\011\201\001\002\000\004\010\202" +
    "\001\002\000\004\015\ufffa\001\002\000\004\007\204\001" +
    "\002\000\004\011\205\001\002\000\004\010\206\001\002" +
    "\000\004\015\ufff8\001\002\000\004\013\214\001\002\000" +
    "\004\007\211\001\002\000\004\011\212\001\002\000\004" +
    "\010\213\001\002\000\004\015\ufff9\001\002\000\004\007" +
    "\215\001\002\000\004\011\216\001\002\000\004\010\217" +
    "\001\002\000\004\015\ufff7\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\215\000\006\002\005\003\004\001\001\000\002\001" +
    "\001\000\004\004\007\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\113\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Syntax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Syntax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Syntax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    public void syntax_error (Symbol s) {
        this.s = s;
    }

    public Symbol getS() {
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Syntax$actions {


    public Equation E1,E2;

  private final Syntax parser;

  /** Constructor */
  CUP$Syntax$actions(Syntax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Syntax$do_action(
    int                        CUP$Syntax$act_num,
    java_cup.runtime.lr_parser CUP$Syntax$parser,
    java.util.Stack            CUP$Syntax$stack,
    int                        CUP$Syntax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Syntax$result;

      /* select the action based on the action number */
      switch (CUP$Syntax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // SENTENCIA ::= SENTENCIA_EC1 SENTENCIA_EC2 SOLUCION 
            {
              Object RESULT =null;

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-2)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // SOLUCION ::= PALABRA_RESERVADA 
            {
              Object RESULT =null;
		
    Utilities.resolveX(E1,E2);
    Utilities.resolveY(E1,E2);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SOLUCION",3, ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION NUMERO VARIABLEX RESTA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = -1.0;
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION NUMERO VARIABLEX SUMA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = 1.0;
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION RESTA VARIABLEX RESTA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString())*(-1);   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION RESTA VARIABLEX SUMA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString());   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION RESTA VARIABLEX RESTA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = -1.0;
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION RESTA VARIABLEX SUMA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = 1.0;
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION VARIABLEX RESTA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString())*(-1);   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION VARIABLEX SUMA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString());   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION VARIABLEX RESTA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = -1.0;
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION VARIABLEX SUMA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = 1.0;
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION NUMERO VARIABLEX RESTA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString())*(-1);   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SENTENCIA_EC2 ::= ECUACION2 ASIGNACION NUMERO VARIABLEX SUMA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString());   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E2 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC2",2, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION NUMERO VARIABLEX RESTA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = -1.0;
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION NUMERO VARIABLEX SUMA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-6)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = 1.0;
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION RESTA VARIABLEX RESTA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString())*(-1);   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION RESTA VARIABLEX SUMA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString());   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION RESTA VARIABLEX RESTA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = -1.0;
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION RESTA VARIABLEX SUMA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = -1.0;
    Double b = 1.0;
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION VARIABLEX RESTA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString())*(-1);   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION VARIABLEX SUMA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString());   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-8)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION VARIABLEX RESTA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = -1.0;
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION VARIABLEX SUMA VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = 1.0;
    Double b = 1.0;
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION NUMERO VARIABLEX RESTA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString())*(-1);   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // SENTENCIA_EC1 ::= ECUACION1 ASIGNACION NUMERO VARIABLEX SUMA NUMERO VARIABLEY IGUALDAD NUMERO SEPARADOR 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).right;
		Object n1 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-7)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).right;
		Object n2 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-4)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object n3 = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		
    Double a = Double.parseDouble(n1.toString());
    Double b = 0.0;
    if(Utilities.validateNumber(Double.parseDouble(n2.toString()))) {
        b = Double.parseDouble(n2.toString());   
    } else {
        throw new NegativeNumberException("Por favor quitar el signo - en el coeficiente de la Variable y");
    }
    Double c = Double.parseDouble(n3.toString());
    E1 = Utilities.setEquationData(a,b,c);

              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_EC1",1, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-9)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          return CUP$Syntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= SENTENCIA EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)).value;
		RESULT = start_val;
              CUP$Syntax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Syntax$stack.elementAt(CUP$Syntax$top-1)), ((java_cup.runtime.Symbol)CUP$Syntax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Syntax$parser.done_parsing();
          return CUP$Syntax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

